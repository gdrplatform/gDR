[{"path":[]},{"path":"https://gdrplatform.github.io/gDR/PULL_REQUEST_TEMPLATE.html","id":"what-changed","dir":"","previous_headings":"","what":"What changed?","title":"Description","text":"Related JIRA issue:","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDR/PULL_REQUEST_TEMPLATE.html","id":"checklist-for-sustainable-code-base","dir":"","previous_headings":"","what":"Checklist for sustainable code base","title":"Description","text":"added tests code changed/added added documentation code changed/added made sure naming new functions self-explanatory consistent","code":""},{"path":"https://gdrplatform.github.io/gDR/PULL_REQUEST_TEMPLATE.html","id":"logistic-checklist","dir":"","previous_headings":"","what":"Logistic checklist","title":"Description","text":"Package version bumped Changelog updated","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"intro","dir":"Articles","previous_headings":"","what":"Introduction","title":"gDR suite","text":"decades, many departments across gRED Roche generated large amounts drug response screening data using Genentech’s rich drug compounds inventory. extensive labor time invested generate data, analyzed standardized manner meaningful comparison. one hand, large screens performed across many cell lines drugs semi-automated manner. hand, small-scale studies, focused factors contribute sensitivity resistance certain therapies, generally performed individual scientist limited automation. complementary approaches rarely handled way. Commercial softwares available analyzing large datasets, whereas researchers small-scale datasets often process data ad hoc software like PRISM. , propose suite computational tools enable processing, archiving, visualization drug response data experiment, regardless size experimental design, thus ensuring reproducibility implementation Findable, Accessible, Interoperable, Reusable (F...R.) principles, goal making accessible public community. now share subset gDR suite components pre-processing processing data.","code":""},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"rpackages","dir":"Articles","previous_headings":"Introduction","what":"R Packages","title":"gDR suite","text":"gDR suite consists packages power app make comprehensive tool. packages gDR umbrella stored gDR platform GitHub organization. happy share packages importing, processing managing gDR data: - gDRimport - gDRcore - gDRutils - gDRtestData","code":""},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"data-structures","dir":"Articles","previous_headings":"Introduction","what":"Data structures","title":"gDR suite","text":"gDR data model based SummarizedExperiment BumpyMatrix. readers unfamiliar data models, recommend first reading SummarizedExperiment vignettes, followed BumpyMatrix vignettes. SummarizedExperiment data structure enables ease subsetting within SummarizedExperiment object, also provides ease trying correlate drug response data genomic data, data may jointly stored MultiAssayExperiment. BumpyMatrix allows storage multi-dimensional data retaining matrix abstraction. data structure core data structure downstream processing functions well visualization tools operate .","code":""},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"overview","dir":"Articles","previous_headings":"Introduction","what":"Overview","title":"gDR suite","text":"gDR suite designed modular manner, user can jump “standard” end--end gDR processing pipeline several entry points suitable needs. full pipeline involves: user able enter part pipeline long able create intermediate object (.e., individual manifest, template, raw data files, single, long table, SummarizedExperiment object Bumpy assays).","code":"manifest, template(s), raw data                         |                         |  1. Aggregating all raw data and metadata                         |  into a single long table.                          |                         V               single, long table                         |                         |  2. Transforming the long table into                          |  a SummarizedExperiment object with BumpyMatrix assays                          |  by specifying what columns belong on rows,                          |  columns, and nested.                         |                         V           SummarizedExperiment object           with raw and treated assays                         |                         |  3. Normalizing, averaging, and fitting data.                         |                         V           SummarizedExperiment object           with raw, treated, normalized,            averaged, and metric assays,     ready for use by downstream visualization"},{"path":[]},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"aggregating-raw-data-and-metadata-1","dir":"Articles","previous_headings":"Quick start","what":"Aggregating raw data and metadata (1)","title":"gDR suite","text":"gDR suite ultimately requires single, long merged table containing raw data metadata. support common use case, provide convenience function takes three objects: manifest, template(s), raw data create single, long merged table user. manifest contains metadata experimental design, template files specify drugs cell lines used, raw data output files obtained plate reader scanner. Exemplary data can found : [1] “/usr/local/lib/R/site-library/gDRimport/extdata/data1/manifest.xlsx” [1] “/usr/local/lib/R/site-library/gDRimport/extdata/data1/Template_7daytreated.xlsx” [2] “/usr/local/lib/R/site-library/gDRimport/extdata/data1/Template_Untreated.xlsx” [1] “/usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx” [2] “/usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx” Using convenience function import_data, long table easily created: function expect certain “identifiers” tell processing functions columns long table map certain expected fields, column interpreted correctly. details regarding identifiers, see “Details” section ?identifiers. Use set_env_identifier set_SE_identifiers set correct mappings expected fields long table column names.","code":"library(gDR) #> Loading required package: gDRcore #> Loading required package: gDRimport #> Loading required package: gDRutils # get test data from gDRimport package # i.e. paths to manifest, templates and results files td <- get_test_data() manifest_path(td) template_path(td) result_path(td) # Import data imported_data <-    import_data(manifest_path(td), template_path(td), result_path(td)) head(imported_data)"},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"transforming-data-into-a-summarizedexperiment-2","dir":"Articles","previous_headings":"Quick start","what":"Transforming data into a SummarizedExperiment (2)","title":"gDR suite","text":"Next, can transform long table initial SummarizedExperiment object. , need tell software: - go rows columns versus nested assay. - rows table consider “control” versus “treated” normalization. - data type converted SE. can setting untreated_tag identifier like set_env_identifier(\"untreated_tag\" = c(\"MY_CONTROL_TERMINOLOGY_HERE\")). specifying nested_keys argument within create_and_normalize_SE specifiying data_type. Note created SummarizedExperiment object rowData, colData, metadata 3 assays.","code":"inl <- prepare_input(imported_data) #> Warning in .set_nested_confounders(nested_confounders = nested_confounders, : 'Plate' nested confounder(s) is/are not present in the data. #>     Switching into 'Barcode' nested confounder(s). detected_data_types <- names(inl$exps) detected_data_types #> [1] \"combination\"  \"single-agent\" se <- create_and_normalize_SE(   inl$df_list[[\"single-agent\"]],   data_type = \"single-agent\",   nested_confounders = inl$nested_confounders) #> INFO [2024-05-08 12:34:15]  #> INFO [2024-05-08 12:34:15] se #> class: SummarizedExperiment  #> dim: 3 6  #> metadata(3): identifiers experiment_metadata Keys #> assays(3): RawTreated Controls Normalized #> rownames(3): G00002_drug_002_moa_A_168 G00004_drug_004_moa_A_168 #>   G00011_drug_011_moa_B_168 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(6): CL00011_cellline_BA_breast_cellline_BA_unknown_26 #>   CL00012_cellline_CA_breast_cellline_CA_unknown_30 ... #>   CL00015_cellline_FA_breast_cellline_FA_unknown_42 #>   CL00018_cellline_IB_breast_cellline_IB_unknown_54 #> colData names(6): clid CellLineName ... subtype ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"averaging-and-fitting-data-3","dir":"Articles","previous_headings":"Quick start","what":"Averaging and fitting data (3)","title":"gDR suite","text":"Next, can average fit data interest.","code":"se <- average_SE(se, data_type = \"single-agent\") se <- fit_SE(se, data_type = \"single-agent\") se #> class: SummarizedExperiment  #> dim: 3 6  #> metadata(5): identifiers experiment_metadata Keys fit_parameters #>   .internal #> assays(5): RawTreated Controls Normalized Averaged Metrics #> rownames(3): G00002_drug_002_moa_A_168 G00004_drug_004_moa_A_168 #>   G00011_drug_011_moa_B_168 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(6): CL00011_cellline_BA_breast_cellline_BA_unknown_26 #>   CL00012_cellline_CA_breast_cellline_CA_unknown_30 ... #>   CL00015_cellline_FA_breast_cellline_FA_unknown_42 #>   CL00018_cellline_IB_breast_cellline_IB_unknown_54 #> colData names(6): clid CellLineName ... subtype ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"rundrugresponseprocessingpipeline","dir":"Articles","previous_headings":"Quick start","what":"runDrugResponseProcessingPipeline","title":"gDR suite","text":"Steps (2) (3) can combined single step convenience function: runDrugResponseProcessingPipeline. Moreover, output MultiAssayExperiment object one experiment per detected data type. Currently four data types supported: ‘single-agent’, ‘cotreatment’, ‘codilution’ ‘matrix’. first three data types processed via ‘single-agent’ model ‘marix’ data processed via ‘combintation’ model. Note final MultiAssayExperiment object can made multiple experiments multiple assays: assay experiment can easily transformed data.table format using convert_se_assay_to_dt function:","code":"# Run gDR pipeline mae <- runDrugResponseProcessingPipeline(imported_data) mae #> A MultiAssayExperiment object of 2 listed #>  experiments with user-defined names and respective classes. #>  Containing an ExperimentList class object of length 2: #>  [1] combination: SummarizedExperiment with 2 rows and 6 columns #>  [2] single-agent: SummarizedExperiment with 3 rows and 6 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files names(mae) #> [1] \"combination\"  \"single-agent\" SummarizedExperiment::assayNames(mae[[1]]) #> [1] \"RawTreated\"     \"Controls\"       \"Normalized\"     \"Averaged\"       #> [5] \"excess\"         \"all_iso_points\" \"isobolograms\"   \"scores\"         #> [9] \"Metrics\" library(kableExtra) se <- mae[[\"single-agent\"]] head(convert_se_assay_to_dt(se, \"Metrics\")) #>                          rId                                               cId #>                       <char>                                            <char> #> 1: G00002_drug_002_moa_A_168 CL00011_cellline_BA_breast_cellline_BA_unknown_26 #> 2: G00002_drug_002_moa_A_168 CL00011_cellline_BA_breast_cellline_BA_unknown_26 #> 3: G00004_drug_004_moa_A_168 CL00011_cellline_BA_breast_cellline_BA_unknown_26 #> 4: G00004_drug_004_moa_A_168 CL00011_cellline_BA_breast_cellline_BA_unknown_26 #> 5: G00011_drug_011_moa_B_168 CL00011_cellline_BA_breast_cellline_BA_unknown_26 #> 6: G00011_drug_011_moa_B_168 CL00011_cellline_BA_breast_cellline_BA_unknown_26 #>       x_mean      x_AOC x_AOC_range      xc50      x_max        ec50 #>        <num>      <num>       <num>     <num>      <num>       <num> #> 1: 0.9157913 0.08420865  0.05733832 7.4683485  0.4225500   5.7741811 #> 2: 0.7420679 0.25793215  0.25820178 4.1712724  0.3065500 100.0000000 #> 3: 0.6675856 0.33241443  0.32656451 0.4942034  0.0260500   0.4793539 #> 4: 0.5092443 0.49075566  0.48159819 0.3199532 -0.4177500   0.5757493 #> 5: 0.3225188 0.67748125          NA      -Inf  0.3225188          NA #> 6: 0.2600750 0.73992500          NA      -Inf  0.2600750          NA #>          x_inf   x_0         h        r2  x_sd_avg               fit_type #>          <num> <num>     <num>     <num>     <num>                 <char> #> 1:  0.14499197     1 1.3311221 0.9199573 0.8794050 DRC3pHillFitModelFixS0 #> 2: -0.76364407     1 0.2918356 0.7732475 0.7276889 DRC3pHillFitModelFixS0 #> 3:  0.04254419     1 2.9149107 0.9751992 0.7335509 DRC3pHillFitModelFixS0 #> 4: -0.48824612     1 1.1597048 0.9858751 0.5983619 DRC3pHillFitModelFixS0 #> 5:          NA    NA        NA        NA 0.2540203   DRCTooFewPointsToFit #> 6:          NA    NA        NA        NA 0.3936048   DRCTooFewPointsToFit #>    maxlog10Concentration N_conc normalization_type fit_source Gnumber DrugName #>                    <num>  <int>             <char>     <char>  <char>   <char> #> 1:              1.000000      9                 RV        gDR  G00002 drug_002 #> 2:              1.000000      9                 GR        gDR  G00002 drug_002 #> 3:              1.000000      9                 RV        gDR  G00004 drug_004 #> 4:              1.000000      9                 GR        gDR  G00004 drug_004 #> 5:             -0.823909      1                 RV        gDR  G00011 drug_011 #> 6:             -0.823909      1                 GR        gDR  G00011 drug_011 #>    drug_moa Duration    clid CellLineName Tissue parental_identifier subtype #>      <char>    <num>  <char>       <char> <char>              <char>  <char> #> 1:    moa_A      168 CL00011  cellline_BA breast         cellline_BA unknown #> 2:    moa_A      168 CL00011  cellline_BA breast         cellline_BA unknown #> 3:    moa_A      168 CL00011  cellline_BA breast         cellline_BA unknown #> 4:    moa_A      168 CL00011  cellline_BA breast         cellline_BA unknown #> 5:    moa_B      168 CL00011  cellline_BA breast         cellline_BA unknown #> 6:    moa_B      168 CL00011  cellline_BA breast         cellline_BA unknown #>    ReferenceDivisionTime #>                    <num> #> 1:                    26 #> 2:                    26 #> 3:                    26 #> 4:                    26 #> 5:                    26 #> 6:                    26"},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"gDR suite","text":"data stored database, multiple ways visualize data depending scientific needs. primary method RShiny visualization tool ‘gDRviz’. , users can search select experiments present database, use downstream visualization modules look dose response curves, heatmaps, etc.","code":""},{"path":"https://gdrplatform.github.io/gDR/articles/gDR.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"gDR suite","text":"","code":"sessionInfo() #> R version 4.3.0 (2023-04-21) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] kableExtra_1.4.0 gDR_1.1.5        gDRutils_1.1.13  gDRimport_1.1.9  #> [5] gDRcore_1.1.20   BiocStyle_2.30.0 #>  #> loaded via a namespace (and not attached): #>   [1] viridisLite_0.4.2           bitops_1.0-7                #>   [3] fastmap_1.1.1               RCurl_1.98-1.14             #>   [5] BumpyMatrix_1.10.0          TH.data_1.1-2               #>   [7] digest_0.6.35               lifecycle_1.0.4             #>   [9] survival_3.5-5              magrittr_2.0.3              #>  [11] compiler_4.3.0              rlang_1.1.3                 #>  [13] sass_0.4.9                  drc_3.0-1                   #>  [15] tools_4.3.0                 plotrix_3.8-4               #>  [17] utf8_1.2.4                  yaml_2.3.8                  #>  [19] data.table_1.15.4           knitr_1.46                  #>  [21] lambda.r_1.2.4              S4Arrays_1.2.1              #>  [23] DelayedArray_0.28.0         xml2_1.3.6                  #>  [25] abind_1.4-5                 multcomp_1.4-25             #>  [27] BiocParallel_1.36.0         purrr_1.0.2                 #>  [29] BiocGenerics_0.48.1         desc_1.4.3                  #>  [31] grid_4.3.0                  stats4_4.3.0                #>  [33] fansi_1.0.6                 colorspace_2.1-0            #>  [35] scales_1.3.0                MASS_7.3-58.4               #>  [37] gtools_3.9.5                MultiAssayExperiment_1.28.0 #>  [39] SummarizedExperiment_1.32.0 cli_3.6.2                   #>  [41] mvtnorm_1.2-4               rmarkdown_2.26              #>  [43] crayon_1.5.2                ragg_1.2.7                  #>  [45] rstudioapi_0.15.0           readxl_1.4.3                #>  [47] cachem_1.0.8                stringr_1.5.1               #>  [49] zlibbioc_1.48.2             splines_4.3.0               #>  [51] assertthat_0.2.1            parallel_4.3.0              #>  [53] BiocManager_1.30.22         formatR_1.14                #>  [55] cellranger_1.1.0            XVector_0.42.0              #>  [57] matrixStats_1.3.0           vctrs_0.6.5                 #>  [59] Matrix_1.6-5                sandwich_3.1-0              #>  [61] jsonlite_1.8.8              carData_3.0-5               #>  [63] bookdown_0.37               car_3.1-2                   #>  [65] IRanges_2.36.0              S4Vectors_0.40.2            #>  [67] systemfonts_1.0.5           testthat_3.2.1.1            #>  [69] jquerylib_0.1.4             rematch_2.0.0               #>  [71] glue_1.7.0                  pkgdown_2.0.7               #>  [73] codetools_0.2-19            stringi_1.8.4               #>  [75] futile.logger_1.4.3         GenomeInfoDb_1.38.8         #>  [77] GenomicRanges_1.54.1        munsell_0.5.1               #>  [79] tibble_3.2.1                pillar_1.9.0                #>  [81] htmltools_0.5.8.1           brio_1.1.5                  #>  [83] GenomeInfoDbData_1.2.11     R6_2.5.1                    #>  [85] textshaping_0.3.7           evaluate_0.23               #>  [87] lattice_0.21-8              Biobase_2.62.0              #>  [89] futile.options_1.0.1        backports_1.4.1             #>  [91] memoise_2.0.1               bslib_0.7.0                 #>  [93] svglite_2.1.3               SparseArray_1.2.4           #>  [95] checkmate_2.3.1             xfun_0.43                   #>  [97] fs_1.6.4                    MatrixGenerics_1.14.0       #>  [99] zoo_1.8-12                  pkgconfig_2.0.3"},{"path":"https://gdrplatform.github.io/gDR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allison Vuong. Author. Bartosz Czech. Author. Arkadiusz Gladki. Maintainer, author. Marc Hafner. Author. Dariusz Scigocki. Author. Janina Smola. Author. Sergiu Mocanu. Author.","code":""},{"path":"https://gdrplatform.github.io/gDR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vuong , Czech B, Gladki , Hafner M, Scigocki D, Smola J, Mocanu S (2024). gDR: Umbrella package R packages gDR suite. https://github.com/gdrplatform/gDR, https://gdrplatform.github.io/gDR/.","code":"@Manual{,   title = {gDR: Umbrella package for R packages in the gDR suite},   author = {Allison Vuong and Bartosz Czech and Arkadiusz Gladki and Marc Hafner and Dariusz Scigocki and Janina Smola and Sergiu Mocanu},   year = {2024},   note = {https://github.com/gdrplatform/gDR, https://gdrplatform.github.io/gDR/}, }"},{"path":"https://gdrplatform.github.io/gDR/index.html","id":"gdr-overview","dir":"","previous_headings":"","what":"Umbrella package for R packages in the gDR suite","title":"Umbrella package for R packages in the gDR suite","text":"gDR umbrella package gDR programmatic R interface. gDR suite offers full stack solution processing drug response data. enables range users across computational savvy, (.e. lab scientists computational scientists alike) access , standardized data. suite made several core R packages.","code":""},{"path":"https://gdrplatform.github.io/gDR/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Umbrella package for R packages in the gDR suite","text":"package website available link.","code":""},{"path":"https://gdrplatform.github.io/gDR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Umbrella package for R packages in the gDR suite","text":"easiest way use functions gDR package using Docker image. one ways . Generate new personal token Firstly, generate new personal token don’t one (go https://github.com/settings/tokens/new). Clone gDR repository , clone gDR repository via https (ssh). Please use personal token asked password. [Optional] Save access token .github_access_token.txt file Write access token single line file: rplatform/.github_access_token.txt. Docker build build Docker image. Create ‘gdr_rstudio’ container RStudio IDE available http://localhost:8787 (default credentials login: rstudio password: gdr). ’ve just successfully set environment gDR umbrella package. Please see gDR vignette examples usage.","code":"git clone https://github.com/gdrplatform/gDR.git cp .github_access_token.txt rplatform/ bash extras/create_image.sh bash extras/create_container.sh"},{"path":"https://gdrplatform.github.io/gDR/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"Umbrella package for R packages in the gDR suite","text":"eager make tool useful community. welcome suggestions via GitHub issues, pull requests bugfixes/new features. making pull requests, please first look style conventions gDRstyle.","code":""},{"path":"https://gdrplatform.github.io/gDR/index.html","id":"preparing-your-machine-to-run-gdr-images","dir":"","previous_headings":"","what":"Preparing your machine to run gDR images","title":"Umbrella package for R packages in the gDR suite","text":"install Docker. Install Docker MacOS https://docs.docker.com/desktop/install/mac-install/ Install Docker Windows https://docs.docker.com/desktop/install/windows-install/ Install Docker Linux https://docs.docker.com/desktop/install/linux-install/ MacOS troubleshooting (M1/M2) solve problem, please execute steps :","code":"Could not connect to the R session on RStudio Server Unable to connect to service (1) Go to Settings Click Features in development Select checkbox: Use Rossetta for x86/amd64 emulation on Apple Silicon"},{"path":"https://gdrplatform.github.io/gDR/reference/gDR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gDR: Umbrella package for R packages in the gDR suite — gDR-package","title":"gDR: Umbrella package for R packages in the gDR suite — gDR-package","text":"Package part gDR suite. reexports functions packages gDR suite contain critical processing functions utilities. vignette walks full processing pipeline drug response analyses gDR suite offers. Package part gDR suite. reexports functions packages gDR suite contain critical processing functions utilities. vignette walks full processing pipeline drug response analyses gDR suite offers.","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/gDR-package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gDR: Umbrella package for R packages in the gDR suite — gDR-package","text":"package help page package help page","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/gDR-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"gDR: Umbrella package for R packages in the gDR suite — gDR-package","text":"learn functions start help(package = \"gDR\")","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDR/reference/gDR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gDR: Umbrella package for R packages in the gDR suite — gDR-package","text":"Maintainer: Arkadiusz Gladki gladki.arkadiusz@gmail.com Authors: Allison Vuong vuong.allison@gene.com Bartosz Czech Marc Hafner Dariusz Scigocki Janina Smola Sergiu Mocanu","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/import_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import raw data — import_data","title":"Import raw data — import_data","text":"Import raw data","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/import_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import raw data — import_data","text":"","code":"import_data(   manifest_file,   template_file,   results_file,   instrument = \"EnVision\" )"},{"path":"https://gdrplatform.github.io/gDR/reference/import_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import raw data — import_data","text":"manifest_file character, file path(s) manifest(s) template_file character, datapaths names results file(s) character file path templates file(s) results_file character, datapaths names results file(s) character file path results file(s) instrument string type instrument used","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/import_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import raw data — import_data","text":"data.table","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/import_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import raw data — import_data","text":"","code":"td <- get_test_data() i_df <- import_data(manifest_path(td), template_path(td), result_path(td)) #> INFO [2024-05-08 12:34:05] Manifest loaded successfully #> INFO [2024-05-08 12:34:05] Reading Template_7daytreated.xlsx with load_templates_xlsx #> INFO [2024-05-08 12:34:05] Loading Template_7daytreated.xlsx #> INFO [2024-05-08 12:34:05] Loading Template_Untreated.xlsx #> INFO [2024-05-08 12:34:05] Templates loaded successfully! #> INFO [2024-05-08 12:34:06] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-05-08 12:34:06] Plate 201904190a read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904190b read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904190c read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904190d read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904190e read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904190f read; 384 wells #> INFO [2024-05-08 12:34:06] File done #> INFO [2024-05-08 12:34:06] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-05-08 12:34:06] Plate 201904197a read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904197b read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904197c read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904197d read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904197e read; 384 wells #> INFO [2024-05-08 12:34:06] Plate 201904197f read; 384 wells #> INFO [2024-05-08 12:34:06] File done #> INFO [2024-05-08 12:34:06] Merging data #> INFO [2024-05-08 12:34:06] Merging the metadata (manifest and treatment files) #> WARN [2024-05-08 12:34:06] 4608 well loaded, 768 wells discarded for lack of annotation,  #>     3840 data point selected #>  #> INFO [2024-05-08 12:34:06] Merge with Cell line info"},{"path":"https://gdrplatform.github.io/gDR/reference/small_combo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Small data.table with raw combo data used for processing via gDR — small_combo_data","title":"Small data.table with raw combo data used for processing via gDR — small_combo_data","text":"dataset containing ReadoutValues combo experiments made-3 drugs, 2 co-drugs, 2 cell lines","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/small_combo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small data.table with raw combo data used for processing via gDR — small_combo_data","text":"","code":"data(small_combo_data)"},{"path":"https://gdrplatform.github.io/gDR/reference/small_combo_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Small data.table with raw combo data used for processing via gDR — small_combo_data","text":"data frame 3600 rows 16 variables: Barcode clidcell line id CellLineNamecell line name Tissuecell line tissue ReferenceDivisionTimecell line division time Gnumberdrug id DrugNamedrug name drug_moadrug mode action Concentrationdrug concentration Gnumber_2co-drug id DrugName_2co-drug name drug_moa_2co-drug mode action Concentration_2co-drug concentration ReadoutValuereadout value BackgroundValuebackgroud value Durationduration","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/small_combo_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small data.table with raw combo data used for processing via gDR — small_combo_data","text":"data.table","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/small_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Small data.table with raw data used for processing via gDR — small_data","title":"Small data.table with raw data used for processing via gDR — small_data","text":"dataset containing ReadoutValues single-agent experiments made-10 drugs 10 cell lines","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/small_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small data.table with raw data used for processing via gDR — small_data","text":"","code":"data(small_data)"},{"path":"https://gdrplatform.github.io/gDR/reference/small_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Small data.table with raw data used for processing via gDR — small_data","text":"data frame 3300 rows 12 variables: Barcode clidcell line id CellLineNamecell line name Tissuecell line tissue ReferenceDivisionTimecell line division time Gnumberdrug id DrugNamedrug name drug_moadrug mode action Concentrationdrug concentration ReadoutValuereadout value BackgroundValuebackgroud value Durationduration","code":""},{"path":"https://gdrplatform.github.io/gDR/reference/small_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small data.table with raw data used for processing via gDR — small_data","text":"data.table","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-116---2024-05-08","dir":"Changelog","previous_headings":"","what":"gDR 1.1.6 - 2024-05-08","title":"gDR 1.1.6 - 2024-05-08","text":"fix typo","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-115---2024-02-26","dir":"Changelog","previous_headings":"","what":"gDR 1.1.5 - 2024-02-26","title":"gDR 1.1.5 - 2024-02-26","text":"improved references valid NEWS.md","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-114---2024-02-12","dir":"Changelog","previous_headings":"","what":"gDR 1.1.4 - 2024-02-12","title":"gDR 1.1.4 - 2024-02-12","text":"make documentation compatible pkdgdown","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-113---2024-01-22","dir":"Changelog","previous_headings":"","what":"gDR 1.1.3 - 2024-01-22","title":"gDR 1.1.3 - 2024-01-22","text":"add new description fields","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-112---2024-01-19","dir":"Changelog","previous_headings":"","what":"gDR 1.1.2 - 2024-01-19","title":"gDR 1.1.2 - 2024-01-19","text":"update package vignette","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-111---2023-11-22","dir":"Changelog","previous_headings":"","what":"gDR 1.1.1 - 2023-11-22","title":"gDR 1.1.1 - 2023-11-22","text":"sync main devel branch","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-110---2023-10-24","dir":"Changelog","previous_headings":"","what":"gDR 1.1.0 - 2023-10-24","title":"gDR 1.1.0 - 2023-10-24","text":"release Bioc 3.18","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-100---2023-10-24","dir":"Changelog","previous_headings":"","what":"gDR 1.0.0 - 2023-10-24","title":"gDR 1.0.0 - 2023-10-24","text":"prerelease Bioc 3.18","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0999---2023-10-18","dir":"Changelog","previous_headings":"","what":"gDR 0.99.9 - 2023-10-18","title":"gDR 0.99.9 - 2023-10-18","text":"adjust NEWS Bioc format","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0998---2023-08-17","dir":"Changelog","previous_headings":"","what":"gDR 0.99.8 - 2023-08-17","title":"gDR 0.99.8 - 2023-08-17","text":"update README","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0997---2023-08-17","dir":"Changelog","previous_headings":"","what":"gDR 0.99.7 - 2023-08-17","title":"gDR 0.99.7 - 2023-08-17","text":"clean-update documentation simplify Docker-based installation","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0996---2023-05-22","dir":"Changelog","previous_headings":"","what":"gDR 0.99.6 - 2023-05-22","title":"gDR 0.99.6 - 2023-05-22","text":"format vignette BiocStyle","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0995---2023-05-11","dir":"Changelog","previous_headings":"","what":"gDR 0.99.5 - 2023-05-11","title":"gDR 0.99.5 - 2023-05-11","text":"fix related data.table","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0994---2023-04-20","dir":"Changelog","previous_headings":"","what":"gDR 0.99.4 - 2023-04-20","title":"gDR 0.99.4 - 2023-04-20","text":"switch OSI license","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0993---2023-04-13","dir":"Changelog","previous_headings":"","what":"gDR 0.99.3 - 2023-04-13","title":"gDR 0.99.3 - 2023-04-13","text":"update documentation - Bioc-compatibility","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0992---2023-04-07","dir":"Changelog","previous_headings":"","what":"gDR 0.99.2 - 2023-04-07","title":"gDR 0.99.2 - 2023-04-07","text":"update maintainer","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0991---2023-04-04","dir":"Changelog","previous_headings":"","what":"gDR 0.99.1 - 2023-04-04","title":"gDR 0.99.1 - 2023-04-04","text":"update requirements - gDRcore","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0990---2023-03-23","dir":"Changelog","previous_headings":"","what":"gDR 0.99.0 - 2023-03-23","title":"gDR 0.99.0 - 2023-03-23","text":"switch Bioc compatible versioning","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0137---2023-03-23","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.7 - 2023-03-23","title":"gDR 0.1.3.7 - 2023-03-23","text":"drop gDRcomponents dependency","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0136---2023-03-13","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.6 - 2023-03-13","title":"gDR 0.1.3.6 - 2023-03-13","text":"bugfix - assure proper path shared_dir vignette","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0135---2023-03-08","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.5 - 2023-03-08","title":"gDR 0.1.3.5 - 2023-03-08","text":"add functions gDRcomponents","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0134---2023-02-28","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.4 - 2023-02-28","title":"gDR 0.1.3.4 - 2023-02-28","text":"update vignette","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0133---2023-01-18","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.3 - 2023-01-18","title":"gDR 0.1.3.3 - 2023-01-18","text":"fixed NOTES","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0132---2022-12-15","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.2 - 2022-12-15","title":"gDR 0.1.3.2 - 2022-12-15","text":"update deps","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0131---2022-10-05","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.1 - 2022-10-05","title":"gDR 0.1.3.1 - 2022-10-05","text":"add BioCparallel kableExtra dep","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0130---2022-06-02","dir":"Changelog","previous_headings":"","what":"gDR 0.1.3.0 - 2022-06-02","title":"gDR 0.1.3.0 - 2022-06-02","text":"release 1.3.0","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-00012---2022-04-21","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.12 - 2022-04-21","title":"gDR 0.0.0.12 - 2022-04-21","text":"update unit tests","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-00011---2022-04-21","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.11 - 2022-04-21","title":"gDR 0.0.0.11 - 2022-04-21","text":"remove redundant function argument","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-00010---2022-04-20","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.10 - 2022-04-20","title":"gDR 0.0.0.10 - 2022-04-20","text":"adjust removal large RDS files gDRtestData","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0009---2021-09-13","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.9 - 2021-09-13","title":"gDR 0.0.0.9 - 2021-09-13","text":"update CODEOWNERS use teams","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0007---2021-09-13","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.7 - 2021-09-13","title":"gDR 0.0.0.7 - 2021-09-13","text":"remove unnecessary exports","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0006---2021-09-13","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.6 - 2021-09-13","title":"gDR 0.0.0.6 - 2021-09-13","text":"update version package dependencies","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0005---2021-09-13","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.5 - 2021-09-13","title":"gDR 0.0.0.5 - 2021-09-13","text":"update vignette","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0004---2021-06-25","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.4 - 2021-06-25","title":"gDR 0.0.0.4 - 2021-06-25","text":"update version package dependencies","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0003---2021-06-25","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.3 - 2021-06-25","title":"gDR 0.0.0.3 - 2021-06-25","text":"update roxygen documentation","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0002---2021-06-24","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.2 - 2021-06-24","title":"gDR 0.0.0.2 - 2021-06-24","text":"add example data","code":""},{"path":"https://gdrplatform.github.io/gDR/news/index.html","id":"gdr-0001---2021-02-03","dir":"Changelog","previous_headings":"","what":"gDR 0.0.0.1 - 2021-02-03","title":"gDR 0.0.0.1 - 2021-02-03","text":"initial version","code":""}]
